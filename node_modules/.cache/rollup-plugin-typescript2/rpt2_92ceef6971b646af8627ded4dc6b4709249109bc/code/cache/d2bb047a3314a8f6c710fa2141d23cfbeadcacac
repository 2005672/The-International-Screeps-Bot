{"code":"import './creepFunctions';\r\nimport { harvesterManager } from './creepManagers/harvesterManager';\r\nexport function creepManager(room) {\r\n    class ManagerParent {\r\n        constructor(manager) {\r\n            this.manager = manager;\r\n            this.creepsOfRole = [];\r\n        }\r\n    }\r\n    const managerParents = {\r\n        harvester: new ManagerParent(harvesterManager),\r\n    };\r\n    for (let role in managerParents) {\r\n        let managerParent = managerParents[role];\r\n        // Iterate if there are no creeps of managerParent's role\r\n        if (room.myCreeps[role].length == 0)\r\n            continue;\r\n        // Add creeps of role to managerParent's creeps\r\n        managerParent.creepsOfRole = room.myCreeps[role];\r\n        // Run manager\r\n        managerParent.manager();\r\n    }\r\n}\r\n//# sourceMappingURL=creepManager.js.map","references":["C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/creeps/creepFunctions.ts","C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/creeps/creepManagers/harvesterManager.ts","C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/creeps/creepManagers/mineralHarvesterManager.ts"],"map":"{\"version\":3,\"file\":\"creepManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/room/creeps/creepManager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,kBAAkB,CAAA;AAEzB,OAAO,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAA;AAGnE,MAAM,UAAU,YAAY,CAAC,IAAU;IAOnC,MAAM,aAAa;QACf,YAAY,OAAY;YAEpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;YACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;QAC1B,CAAC;KACJ;IAED,MAAM,cAAc,GAAyB;QACzC,SAAS,EAAE,IAAI,aAAa,CAAC,gBAAgB,CAAC;KACjD,CAAA;IAED,KAAK,IAAI,IAAI,IAAI,cAAc,EAAE;QAE7B,IAAI,aAAa,GAAG,cAAc,CAAC,IAAI,CAAC,CAAA;QAExC,yDAAyD;QAEzD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;YAAE,SAAQ;QAE7C,+CAA+C;QAE/C,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;QAEhD,cAAc;QAEd,aAAa,CAAC,OAAO,EAAE,CAAA;KAC1B;AACL,CAAC\"}"}
