{"code":"import './spawningFunctions';\r\nimport { spawnRequests } from './spawnRequests';\r\nexport function spawnManager(room) {\r\n    const spawns = room.get('spawn');\r\n    // Find spawns that aren't spawning\r\n    const inactiveSpawns = spawns.filter(function (spawn) { return !spawn.spawning; });\r\n    // Stop if there are no inactiveSpawns\r\n    if (inactiveSpawns.length == 0)\r\n        return;\r\n    // Import spawningOpts\r\n    const { spawningOpts, requiredCreeps, } = spawnRequests(room);\r\n    let i = 0;\r\n    for (let spawningObject of spawningOpts) {\r\n        // Iterate if there are no required creeps of role\r\n        if (requiredCreeps[spawningObject.extraOpts.memory.role] == 0)\r\n            continue;\r\n        // Try to find inactive spawn, if can't, stop\r\n        const spawn = inactiveSpawns[i];\r\n        if (!spawn)\r\n            break;\r\n        // Enable dry run\r\n        spawningObject.extraOpts.dryRun = true;\r\n        // See if creep can be spawned, stop if it can't\r\n        const testSpawn = spawn.advancedSpawn(spawningObject);\r\n        if (testSpawn != 0) {\r\n            new CustomLog('Failed to spawn', testSpawn + ', ' + spawningObject.cost);\r\n            break;\r\n        }\r\n        // Disable dry run\r\n        spawningObject.extraOpts.dryRun = false;\r\n        // Spawn creep\r\n        spawn.advancedSpawn(spawningObject);\r\n        // Record an inactive spawn was used and iterate\r\n        i++;\r\n        continue;\r\n    }\r\n}\r\n//# sourceMappingURL=spawnManager.js.map","references":["C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/spawningFunctions.ts","C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/spawnRequests.ts"],"map":"{\"version\":3,\"file\":\"spawnManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/room/spawnManager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,qBAAqB,CAAA;AAC5B,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAE/C,MAAM,UAAU,YAAY,CAAC,IAAU;IAEnC,MAAM,MAAM,GAAqB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;IAElD,mCAAmC;IAEnC,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,UAAS,KAAqB,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAA,CAAC,CAAC,CAAC,CAAA;IAEhG,sCAAsC;IAEtC,IAAI,cAAc,CAAC,MAAM,IAAI,CAAC;QAAE,OAAM;IAEtC,sBAAsB;IAEtB,MAAM,EACF,YAAY,EACZ,cAAc,GAChB,GAAG,aAAa,CAAC,IAAI,CAAC,CAAA;IAExB,IAAI,CAAC,GAAG,CAAC,CAAA;IAET,KAAK,IAAI,cAAc,IAAI,YAAY,EAAE;QAErC,kDAAkD;QAElD,IAAI,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAAE,SAAQ;QAEvE,6CAA6C;QAE7C,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAA;QAC/B,IAAI,CAAC,KAAK;YAAE,MAAK;QAEjB,iBAAiB;QAEjB,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAA;QAEtC,gDAAgD;QAEhD,MAAM,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAA;QACrD,IAAI,SAAS,IAAI,CAAC,EAAE;YAEhB,IAAI,SAAS,CAAC,iBAAiB,EAAE,SAAS,GAAG,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,CAAA;YACxE,MAAK;SACR;QAED,kBAAkB;QAElB,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAA;QAEvC,cAAc;QAEd,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAA;QAEnC,gDAAgD;QAEhD,CAAC,EAAE,CAAA;QACH,SAAQ;KACX;AACL,CAAC\"}"}
