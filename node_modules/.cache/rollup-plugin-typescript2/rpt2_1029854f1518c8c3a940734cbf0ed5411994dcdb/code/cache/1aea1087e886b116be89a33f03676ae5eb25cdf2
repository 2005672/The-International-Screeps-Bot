{"code":"import './sourceHarvesterFunctions';\r\nexport function sourceHarvesterManager(room, creepsOfRole) {\r\n    for (const creepName of creepsOfRole) {\r\n        const creep = Game.creeps[creepName];\r\n        //\r\n        const source = room.get(creep.memory.sourceName);\r\n        // Record that the creep has source target\r\n        creep.recordSource();\r\n        // Try to move to source. If creep moved then iterate\r\n        const travelToSourceResult = creep.travelToSource();\r\n        if (travelToSourceResult == 0)\r\n            continue;\r\n        // Try to normally harvest. Iterate if creep harvested iterate\r\n        const advancedHarvestResult = creep.advancedHarvestSource(source);\r\n        if (advancedHarvestResult == 0)\r\n            continue;\r\n        // Try to harvest using the sourceLink. If creep harvested iterate\r\n        const transferToSourceLinkResult = creep.transferToSourceLink();\r\n        if (transferToSourceLinkResult == 0 || transferToSourceLinkResult == 'noLink')\r\n            continue;\r\n        // If the source is empty repair contianer if it exists. Iterate if success\r\n        const advancedRepairResult = creep.repairSourceContainer();\r\n        if (advancedHarvestResult == 0 || advancedHarvestResult == 'noContainer')\r\n            continue;\r\n    }\r\n}\r\n//# sourceMappingURL=sourceHarvesterManager.js.map","references":["C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/creeps/creepManagers/sourceHarvesterFunctions.ts","C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/creeps/creepClasses.ts"],"map":"{\"version\":3,\"file\":\"sourceHarvesterManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/room/creeps/creepManagers/sourceHarvesterManager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,4BAA4B,CAAA;AAGnC,MAAM,UAAU,sBAAsB,CAAC,IAAU,EAAE,YAAsB;IAErE,KAAK,MAAM,SAAS,IAAI,YAAY,EAAE;QAElC,MAAM,KAAK,GAAwB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;QAEzD,EAAE;QAEF,MAAM,MAAM,GAAW,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;QAExD,0CAA0C;QAC1C,KAAK,CAAC,YAAY,EAAE,CAAA;QAEpB,qDAAqD;QAErD,MAAM,oBAAoB,GAAG,KAAK,CAAC,cAAc,EAAE,CAAA;QACnD,IAAI,oBAAoB,IAAI,CAAC;YAAE,SAAQ;QAEvC,8DAA8D;QAE9D,MAAM,qBAAqB,GAAG,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAA;QACjE,IAAI,qBAAqB,IAAI,CAAC;YAAE,SAAQ;QAExC,kEAAkE;QAElE,MAAM,0BAA0B,GAAG,KAAK,CAAC,oBAAoB,EAAE,CAAA;QAC/D,IAAI,0BAA0B,IAAI,CAAC,IAAI,0BAA0B,IAAI,QAAQ;YAAE,SAAQ;QAEvF,2EAA2E;QAE3E,MAAM,oBAAoB,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAA;QAC1D,IAAI,qBAAqB,IAAI,CAAC,IAAI,qBAAqB,IAAI,aAAa;YAAE,SAAQ;KACrF;AACL,CAAC\"}"}
