{"code":"import { creepClasses } from \"../creepClasses\";\r\nconst SourceHarvester = creepClasses.sourceHarvester;\r\nSourceHarvester.prototype.recordSource = function () {\r\n    const creep = this;\r\n    const room = creep.room;\r\n    const sourceName = creep.memory.sourceName;\r\n    room.creepsOfSourceAmount[sourceName]++;\r\n};\r\nSourceHarvester.prototype.travelToSource = function () {\r\n    const creep = this;\r\n    const room = creep.room;\r\n    const sourceName = creep.memory.sourceName;\r\n    const closestHarvestPos = room.get(sourceName + 'ClosestHarvestPosition');\r\n    if (global.arePositionsAlike(creep.pos, closestHarvestPos))\r\n        return 'atSource';\r\n    const targetPos = findTargetPos();\r\n    function findTargetPos() {\r\n        // Create costMatrix\r\n        const cm = new PathFinder.CostMatrix();\r\n        // Assign impassible to tiles with sourceHarvesters\r\n        for (const sourceHarvester of room.myCreeps.sourceHarvester) {\r\n            // Iterate if sourceHarvester is this creep\r\n            if (sourceHarvester.id == creep.id)\r\n                continue;\r\n            cm.set(sourceHarvester.x, sourceHarvester.y, 255);\r\n        }\r\n        // return closestHarvestPositions if there is a sourceHarvester on the closestHarvestPosition\r\n        if (cm.get(closestHarvestPos.x, closestHarvestPos.y) != 255)\r\n            return closestHarvestPos;\r\n        // If creepOnHarvestPos find a harvest pos that isn't occupied\r\n        const harvestPositions = room.get(sourceName + 'HarvestPositions');\r\n        for (const harvestPos of harvestPositions) {\r\n            if (cm.get(harvestPos.x, harvestPos.y) == 255)\r\n                continue;\r\n            return harvestPos;\r\n        }\r\n    }\r\n    //\r\n    creep.say('‚è© ' + sourceName);\r\n    creep.travel({\r\n        origin: creep.pos,\r\n        goal: { pos: targetPos, range: 0 },\r\n        cacheAmount: 50,\r\n    });\r\n    return 0;\r\n};\r\nSourceHarvester.prototype.transferToSourceLink = function () {\r\n    const creep = this;\r\n    const room = creep.room;\r\n    const sourceName = creep.memory.sourceName;\r\n    const sourceLink = room.get(sourceName + 'Link');\r\n    if (!sourceLink)\r\n        return 'noLink';\r\n    creep.advancedTransfer(sourceLink);\r\n    return 0;\r\n};\r\n//# sourceMappingURL=sourceHarvesterFunctions.js.map","references":["C:/Users/carso/Documents/GitHub/The-Internationale-Screeps-Bot/src/room/creeps/creepClasses.ts"],"map":"{\"version\":3,\"file\":\"sourceHarvesterFunctions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/room/creeps/creepManagers/sourceHarvesterFunctions.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAA;AAC9C,MAAM,eAAe,GAAG,YAAY,CAAC,eAAe,CAAA;AAEpD,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG;IAErC,MAAM,KAAK,GAAU,IAAI,CAAA;IACzB,MAAM,IAAI,GAAS,KAAK,CAAC,IAAI,CAAA;IAE7B,MAAM,UAAU,GAAW,KAAK,CAAC,MAAM,CAAC,UAAU,CAAA;IAElD,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAA;AAC3C,CAAC,CAAA;AAED,eAAe,CAAC,SAAS,CAAC,cAAc,GAAG;IAEvC,MAAM,KAAK,GAAG,IAAI,CAAA;IAClB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;IAEvB,MAAM,UAAU,GAAW,KAAK,CAAC,MAAM,CAAC,UAAU,CAAA;IAElD,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,wBAAwB,CAAC,CAAA;IAEzE,IAAI,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,EAAE,iBAAiB,CAAC;QAAE,OAAO,UAAU,CAAA;IAE7E,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;IAEjC,SAAS,aAAa;QAElB,oBAAoB;QAEpB,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,CAAA;QAEtC,mDAAmD;QAEnD,KAAK,MAAM,eAAe,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;YAEzD,2CAA2C;YAE3C,IAAI,eAAe,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;gBAAE,SAAQ;YAE5C,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;SACpD;QAED,6FAA6F;QAE7F,IAAI,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,IAAI,GAAG;YAAE,OAAO,iBAAiB,CAAA;QAErF,8DAA8D;QAE9D,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,kBAAkB,CAAC,CAAA;QAElE,KAAK,MAAM,UAAU,IAAI,gBAAgB,EAAE;YAEvC,IAAI,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,GAAG;gBAAE,SAAQ;YAEvD,OAAO,UAAU,CAAA;SACpB;IACL,CAAC;IAED,EAAE;IAEF,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,CAAA;IAE5B,KAAK,CAAC,MAAM,CAAC;QACT,MAAM,EAAE,KAAK,CAAC,GAAG;QACjB,IAAI,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE;QAClC,WAAW,EAAE,EAAE;KAClB,CAAC,CAAA;IAEF,OAAO,CAAC,CAAA;AACZ,CAAC,CAAA;AAED,eAAe,CAAC,SAAS,CAAC,oBAAoB,GAAG;IAE7C,MAAM,KAAK,GAAG,IAAI,CAAA;IAClB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;IAEvB,MAAM,UAAU,GAAW,KAAK,CAAC,MAAM,CAAC,UAAU,CAAA;IAElD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,CAAA;IAChD,IAAI,CAAC,UAAU;QAAE,OAAO,QAAQ,CAAA;IAEhC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAA;IAElC,OAAO,CAAC,CAAA;AACZ,CAAC,CAAA\"}"}
